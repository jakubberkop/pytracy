# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  deploy-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build --sdist --wheel .
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: 
        twine upload dist/* --repository-url https://test.pypi.org/legacy/ --skip-existing

  deploy-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build wheels
      uses: pypa/cibuildwheel@v1.12.0
      # to supply options, put them in 'env', like:
      # env:
      #   CIBW_SOME_OPTION: value

    # - name: Build manylinux Python wheels
    #   uses: RalfG/python-wheels-manylinux-build
    #   with:
    #     python-versions: 'cp310-cp310 cp311-cp311'
    # - name: Auditwheel repair manylinux Python wheels
    #   run: |
    #     python -m pip install auditwheel
    #     auditwheel repair dist/*.whl
    - name: Publish wheels to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: 
        twine upload dist/* --repository-url https://test.pypi.org/legacy/ --skip-existing
